# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
#
# Lewis Li: 
# 1. If no mail for cron log, see /var/mail/mail file.
# 2. For date command use \% instead %

#test
#15 2-8/1 * * * /myscript/lcgogo.sh 1>> /tmp/lcgogo.txt 2>&1 &
#22 * * * *  echo lcgogo 1> /tmp/pcs_`date +\%Y\%m\%d_\%H`.log 2>&1
#27 * * * * find /tmp -maxdepth 1 -name "pcs_*.log" -mtime +1 -exec rm -f {} \;

#pcs
16 1-17/1 * * 1-5 /myscript/github/auto_BaiduPCS/pcs.sh 1> /tmp/pcs_`date +\%Y\%m\%d_\%H`.log 2>&1
16 1-9/1 * * 0,6 /myscript/github/auto_BaiduPCS/pcs.sh 1> /tmp/pcs_`date +\%Y\%m\%d_\%H`.log 2>&1
1 * * * * find /tmp -maxdepth 1 -name "pcs_*.log" -mtime +1 -exec rm -f {} \; 1> /dev/null 2>&1
